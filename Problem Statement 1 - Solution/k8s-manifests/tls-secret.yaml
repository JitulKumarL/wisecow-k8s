apiVersion: v1
kind: Secret
metadata:
  name: wisecow-tls
  namespace: default
type: kubernetes.io/tls
data:
  # Cert Generate : openssl req -x509 -newkey rsa:4096 -keyout tls.key -out tls.crt -days 365 -nodes -subj "/CN=wisecow.local"
  # Then: kubectl create secret tls wisecow-tls --cert=tls.crt --key=tls.key --dry-run=client -o yaml
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZhekNDQTFPZ0F3SUJBZ0lVUEk4L1ptK3NkZWRHVHpIdWx6RXVkTjVBRGRJd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1JqRUxNQWtHQTFVRUJoTUNRVlV4RXpBUkJnTlZCQWdNQ2xOdmJXVXRVM1JoZEdVeElUQWZCZ05WQkFvTQpHRWx1ZEdWeWJtVjBJRmRwWkdkcGRITWdVSFI1SUV4MFpEQWVGdzB5TkRFeE1qTXdPRFUwTXpWYUZ3MHpOREV4Ck1qRXdPRFUwTXpWYU1FWXhDekFKQmdOVkJBWVRBa0ZWTVJNd0VRWURWUVFJREFwVGIyMWxMVk4wWVhSbE1TRXcKSHdZRFZRUUtEQmhKYm5SbGNtNWxkQ0JYYVdSbmFYUnpJRkIwZVNCTWRHUndnZ0lpQW9JQkFRQzc2N29acUE4QQpxQTJvVFh4TzhCQ0o2NmxJRjhFVklMN2ZUWTZtSFYrWmR6MHZRQjNJNGN1cDF0ZXBPUFoxaHAyNFJYQkR2QWtxCnVOcWNmVUU5UG1JOGJmSGJVTkFoeTNacjFvSFgzcXZYVXBrWWV5WFlyTURQNTNvNzNNaGJKKzRvVkxOd2w5VzgKYUxRWXJFVzNkZ3ZYNXVlOE5SdmxlQ29ZeTVVU2FlM3lRakZZbHZ2M3lseFBLYkdkU2o4TE5LQnNVTTlXaVZjRAphSGhmdndveGJIRlNPaWFsWmlJUnZxbW9SYk56c01Nc2pEU2xxRGdxdWo5TzFmRFJTZSs5WmZ5cEV0cC9kNVF1CjRtK2dUeEdOUXZrSDFLUGhoUnhJUjRzbUVMM0NOQVIvVGVXcGhlVVlQaGZmMWZBVEhMSGpYSUNaMXUxdlNYZlcKQzlGWkFnTUJBQUdqVXpCUk1CMEdBMVVkRGdRV0JCVE1IdW5sQWp2VWM5aWdEUXVHMlRXalRsVnhpakFmQmdOVgpIU01FR0RBV2dCVE1IdW5sQWp2VWM5aWdEUXVHMlRXalRsVnhpakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHCENTY0dTSWIzRFFFQkN3VUFBNElDQVFCdkU2TmI4Y0dxQ3hFeWo5T05tUi9FWTZ2bkc5cERsVkROWGlXMkJ5dnAKenVGdERxNlNOTVh1ZHJpblZIa1VHQ2JkeEFHVXNQeUVnYmVNV1JnWnVRTUpqd2hEU2RFcWxJUUZtbDVDaXJSMQoySDZGYXZYNkU5SU95TFZjOGZLWnlYZzZ1b3RQSDRzZkNBNXNBTEQ5MFhXem5YeTNFeFBJNk1WbmVZUFE3TlFxCldXVTlZVlJ4a0pGRm0xeUtJOHNOZUVJMkZKRGdjdWxpQWl0YUJOdUZhR0NuREl1Q0ExT3RvUjlJZ3VsRnoxbzUKeVNWTGJGeUJraEZ4SU5iK2V0eko0SWdGd0RkYW5JejQyUU8vMnZrUXdQU01qMFRHRG84cTF0VWtCVDRMZUo4cQo4OVJHSVE0Um5XcFE0Vld2VzVWdlhHZWg3WWcrTDZ6eTNBUlRhOXNmN2RjQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRZ0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1N3d2dna29BZ0VBQW9JQ0FRQzc2N29acUE4QXFBMm8KVFh4TzhCQ0o2NmxJRjhFVklMN2ZUWTZtSFYrWmR6MHZRQjNJNGN1cDF0ZXBPUFoxaHAyNFJYQkR2QWtxdU5xYwpmVUU5UG1JOGJmSGJVTkFoeTNacjFvSFgzcXZYVXBrWWV5WFlyTURQNTNvNzNNaGJKKzRvVkxOd2w5VzhhTFFZCnJFVzNkZ3ZYNXVlOE5SdmxlQ29ZeTVVU2FlM3lRakZZbHZ2M3lseFBLYkdkU2o4TE5LQnNVTTlXaVZjRGFIaGYKdndveGJIRlNPaWFsWmlJUnZxbW9SYk56c01Nc2pEU2xxRGdxdWo5TzFmRFJTZSs5WmZ5cEV0cC9kNVF1NG0rZwpUeEdOUXZrSDFLUGhoUnhJUjRzbUVMM0NOQVIvVGVXcGhlVVlQaGZmMWZBVEhMSGpYSUNaMXUxdlNYZldDOUZaCkFnTUJBQUVDZ2dJQUdIMXdCQm9FZng3cVhVQ0lyYnFVZWFhZGQxV29vODNYdCtUdmJIN1g0TkZDUGswY2tBQWsKQ0N0R2txc0thWm9qUklVTDdPKy9WUTR2VG5aTEsxRGt0QThHVjRvT0N6NzVFOHp4VzJQamxRcjFGcW5uQjFOLwpsQWZlM2ZuVjI5T3pIenl4eTlUUWFDbXUvSU1FTVlnTkZsNzRuSmdaYnNaQWdJcU1HYlI2Z3VhMWZUQTlLdUNKCjFGZXh4NkozOGdZSklqNW9WZC9KOUhrYlBFVDE2Q3BELzR0R0wyQ2Rid2VycXp0djZONHhYaW9UNkl5Z0FiNTEKZWNnMyt4QkRGSG5WazdCZlFoelVGL0MvZGhnZlV2L1JnOTFHWm5nU0dNRTVCQXMrKzFnY1FlRW1MZFRjck1wLwpxcXZJN1Jsa3hneG1zK3JkdndOTkNOTTBvNThtcG9GY3oyMVNSY2dNdE0wZXBMczN1OFZtTVh0K0xONkdBdjY4Cm1XN3pUV0JOUUEwTSs2WHdQcXJJdFNuKzM2MVdTQ2l4VVlMWWxNWUJZbGp6SjRjWDhVYkJJUW9EWlBhYnZJYnMKKy9nWmxwK0Z0YllYV0JzaHhCb1pJYzFrODhacWYwUHp3U0RYajVmbDJPUXcxdmoxVGh2SzZjQVpkNjRwVExEKwowMGJYdG1wcEhIQ2w2YnBrblRoSUhOL1EyRzR6a3ZJZDBSZUhsTCtjbGRMZkJlcVBWTUZWT2pQRnY0KysyT1JTCkFKS1dORkdNQzEwdUI1K2Vzc1F0SXlnc0xNbWNGVjF6c1ZjQVhRUlZMYmxMS3Z3dlVhUVNtVktmUFJ3VHVFQkcKV0tCcmRNdUJsczloU2drREZZQVZrZFFZKzM1ZFlUbUF6THN4WTVpTTU1Mkd3d0tDQVFFQzY2WnNmeXh6TW5seApyRVdvN1QzVVNUUFAzMFVkb1dmckJqUG5obUV6eEE1M1hpL043Sk12aDRpZGRnOWxkSTBSTWFmMmF3QkdYL1pkCjVZV0JPV1VxYTdmcWQzUjUzbFIzOE9kWjQrSG01TFNxRUlNOVFnNWVzUmJ1VXJJUjFTYXg5ZlZoQ3J4WGl0TkIKL0tNclc5NzZwNEtSY2tKMG10cUVhM084WFBlNERJZnVjV085NXZmSWxtYUJCRFlvOUVqTTJPNmcxQjFyNXdYaQpkRTJGOTUvSXorR2tFSk9WZzF4eHNwUXFJb2QxQnh5S3lqemlSazFrTjdWcFNvZHFqTFB0ODI3UGhmVjhsYmdOCkw5dGZKL3I2VnBROWg1WnZQMEhCNy9vamVHK1BaSVFDcE5EUmRxMXV5ZURrVk9HYjFxWitWZmxYNFIyQkVnRnEKZG5JSm1PczZGUUtDQVFFQXowSFZKcjZBVGJPaTN1UWFydVFBZGQ0SzZJL1p2Y0toTnNuQjhZNGZpRkNiUGZCVwpKY2F2cFo4WjI3bEk4SmtHMSt2L0xVN0VoekQrMkhJeWdkMncrSVEramVuUmxKdGp2OVY2WWdPRGl1TXJDL1ByClpvNGhsV3ljU21zQkZMUkVudERLNkthRTZpR3UvU1N6MkQwNnczUGgvOFlOMjlObzNnUTU5K08xUUlHWHNNZ1cKNzRLSFA1dGsxajNsZUhCVHl3bHJXYnM1TzlieDdnUDJHUWJrWUJwQ1UrSEt0b2RDeENHRGI0OWh6VTJrYTNLVwpPWGNUWGJ0Sk0xNys5ZElPUkZuVGNIOGNSZCtySkZHOGtISkNPbXdVR3JCbVo1aUNndDE3Q2t5djFjNjRxMlVnCmpNcENPWGxFYy9VT0N2enY4bDQ0anNkNE10dTdBdXZUdGlWMXVRS0NBUUJ6VmgvWEJtczFSMUNybzZiRzhTVVMKRzJFcysvTUJEcWZiT0NrT0ZJa1ZZa0hSL09YaDc5cHJQSFIvb3JJZFFQL01WZjZINzZ4OUZHa3lXam80b3NEOApGblVHdElYYUdwRVZHQnZjVnNCdGZaRFVjaGhsRWd6TlV3K0xhWUJSL0JGUXl0UlJHZUR2TzZ1dzRkeDFQajY2CjI1NVBiQzJmVzE4b0Y3UU1KUExJR3JXVnpMNG1xNDcxNU5vdTNKR1ZRNVZoNzFrOWE2TnAwZVhLU1BkSU9KcmEKNm1YTmcveXdoKzFjdWF4T1RGeTJMRERxc2NTNUFXU1VhVEpOYU9jRU5KZ3Q4OC9FbzltUTkvWDl4cGNUc1BSUQpOazc1dWIxc3hweXBmTjBrMnN0TFVyeVRpdGhQZEQ2TmF4TVQrVXcrcEJPSGhOV1g1LzNLUlZrVUVNQmNYbDI5CkFvSUJBSG5qcGJsazl3Q1JJVlBCNWNoWVhWWmR0Q1lPTjJMYm8xemh2WHEyTGNOOXduRkh2aGY4RU9YZ0lxL3YKeTVNL1FDL0VtcEZrZ3B5ZUNYK3pId2F6U0VNdzdQZDI2dUtoQlJ1czltRTlqLzhkZEYrcC9BYkQ3VFdNeXNYZApCVGJwY0E0aVJ0OUhCc3lCdVV1RmdRZ1VXMERudmNhb1pLRTlZRHZrOTZCNWNYSWdleGVtSjU4YjZpOUgxWldqCmlvKzVEQUpNSU5zSWVXdjZ4VTFod0Z0bW55TlI0VVZudE81clgvWEVFVGhiU01vbTRqakZOaGlIaTlSOGdSVXEKM1hCYnhoQ3BWUlNwQXU5WVNvaUZVYThvRXFhTG8zR2FueVU1cThyUUJHR3JmSjlJUm54WHNTN0VTL0M5OEZOZAppNHpnZmY2TGhsZVNRNVpMd3hjT2hpSnFGL0VDZ2dFQUZFVy9hZjhOWVg4UWkxSDlRazNkZWNmd0NZOVpmSnhzCkV5OXVQUkUrdU1qMVNHZDNLY0l3enJRTXVNSEZNc1pHSGF5Nmd1NVhOMytLKzluMlJPZFVJM2VNNzByV2E5UWcKNVUyQUZ5bWZPQjBRb2dvUWVqMFRpRDYzTGlkMUZ5SjVJQlppeWpaSStVQmhwYU9TeU8ySDJ4S1NJeW9KU20weAptVWRMcjM4T3lhVThYRTNuUUt1Q3VETnd6SkhRRjNXNE95UVhHMVRIVVB5d2xJeU1WVDBHZWh6OTVGelBGcUt6ClZFdUhSa2p4MlhJdFRmUHFxRzlOVW9idXl0T2p6NWZZSGM5UGZwNXVzWk52V2NmTUVOam1xU0g2aWJ2RFROMUUKOTdFa29BOU8rcjArMEJMT01zUFZZVzlUcnRQNTVzYVh6eWZ6R05IY2pXZUtKZVc4MDdwZXFnPT0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo=
